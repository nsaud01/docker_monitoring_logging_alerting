version: '2'


services:

#########################################################
####                    LOGGING                      ####
#########################################################

  # Runs on your node(s) and forwards all logs to Logstash.
  master-filebeat:
    image: prima/filebeat
    volumes:
      - ./filebeat/filebeat.yml:/filebeat.yml
      - /var/log:/host-logs
    restart: always
    labels:
      container_group: logging
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group

#########################################################

  # Aggregates logs and forwards them to Elasticsearch.
  logstash:
    image: logstash
    expose:
      - 5044
      - 12201/udp
    volumes:
      - ./logstash/config:/config
      - ./logstash/patterns:/opt/logstash/extra_patterns
    restart: always
    labels:
      container_group: logging
    networks:
      www_net:
        ipv4_address: 172.42.0.38
      building_net:
        ipv4_address: 172.24.0.38
      default:
        ipv4_address: 172.16.0.38

    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group
    command: logstash -f /config

#########################################################

  # Logstash configs can be a hassle. Run 'docker-compose run --rm validate-logstash-config' in order to quickly check your logstash config.
  validate-logstash-config:
    image: logstash
    volumes:
      - ./logstash/config:/config
    command: logstash -t -f /config

#########################################################

  # Storage and search backend. Gets all logs from Logstash and is the backend that Kibana runs on.
  elasticsearch:
    image: elasticsearch
    expose:
      - 9200
    volumes:
      - ../storage/elasticsearch:/usr/share/elasticsearch/data
    restart: always
    command: elasticsearch -Etransport.host=127.0.0.1
    labels:
      container_group: logging
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

#########################################################

  # Takes care of piling piling up Elasticsearch indices/logs. Can do many other things as well.
  # Set up a cron or Jenkins job that runs "docker-compose run --rm curator --config /config.yml /action-file.yml" every once in a while.
  curator:
    image: bobrik/curator
    volumes:
      - ./curator/action-file.yml:/action-file.yml
      - ./curator/config.yml:/config.yml
    labels:
      container_group: logging
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.15.0.38:12201
        labels: container_group

#########################################################

  # Pretty frontend to explore and check out all your logs.
  kibana:
    image: kibana
    expose:
      - 5601
    volumes:
      - ./kibana/config/:/opt/kibana/config/
    restart: always
    labels:
      container_group: logging
    logging:
      driver: gelf
      options:
        gelf-address: udp://172.16.0.38:12201
        labels: container_group
    environment:
      - NODE_OPTIONS=--max-old-space-size=200 # fixes memory leak (https://github.com/elastic/kibana/issues/5170)

#########################################################

  # # Tool to run queries against your Elasticsearch and when alert when finding certain logs.
  # elastalert:
  #   build: elastalert/
  #   restart: always
  #   volumes:
  #     - ./elastalert/log:/opt/log
  #     - ./elastalert/config:/opt/config
  #     - ./elastalert/rules:/opt/rules
  #   environment:
  #     - ELASTICSEARCH_HOST=elasticsearch
  #   labels:
  #     container_group: monitoring
  #   # logging:
  #   #   driver: gelf
  #   #   options:
  #   #     gelf-address: udp://172.16.0.38:12201
  #   #     labels: container_group

#########################################################
####                   Networking                    ####
#########################################################

# Extra-network is necessary to have a dedicated IP for Logstash to forwards log to.
networks:
  www_net:
    external: true

  building_net:
    external: true

  default:
    external:
      name: monitoring_logging



#########################################################

  # watcher (ELK):
  # fluentd (Logstash alternative) :
  # topbeat (Metrics for ELK):


  #### Get a free datadog account to have a look at their dashboards for inspiration:
  #   datadog:
  #   container_name: datadog
  #   image: datadog/docker-dd-agent
  #   hostname: datadog
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /proc/:/host/proc/:ro
  #     - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  #   restart: always
  #   labels:
  #     container_group: monitoring
  #   logging:
  #     driver: gelf
  #     options:
  #       gelf-address: udp://localhost:12201
  #       labels: container_group
  #   environment:
  #     - API_KEY=
